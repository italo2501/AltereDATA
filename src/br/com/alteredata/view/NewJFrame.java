/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.alteredata.view;

import br.com.alteredata.dao.AltereDAO;
import br.com.alteredata.model.Altere;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author italo
 */
public class NewJFrame extends javax.swing.JFrame {

    List<String> listaSerial = new ArrayList<>();
    List<String> listaMAC = new ArrayList<>();
    List<String> listaSerialRel = new ArrayList<>();
    List<String> listaCIX1 = new ArrayList<>();
    List<String> listaCIX2 = new ArrayList<>();
    List<String> listaCIX3 = new ArrayList<>();
    List<String> listaCIXN = new ArrayList<>();
    List<String> listaCUX1 = new ArrayList<>();
    List<String> listaCUX2 = new ArrayList<>();
    List<String> listaCUX3 = new ArrayList<>();
    List<String> listaCUX4 = new ArrayList<>();
    List<String> listaCUX5 = new ArrayList<>();
    List<String> listaCUX6 = new ArrayList<>();
    List<String> listafwIhm = new ArrayList<>();
    List<String> listafwUcp = new ArrayList<>();
    List<String> listafwUps = new ArrayList<>();
    List<String> listaSetup = new ArrayList<>();
    List<String> listaVelocidade = new ArrayList<>();
     List<Altere> listaAltere = new ArrayList<>();

    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        salvarBanco = new javax.swing.JButton();
        consulta = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 449, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 513, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(36, 47, 65));
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(97, 212, 195));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setToolTipText("");

        jPanel2.setBackground(new java.awt.Color(36, 47, 65));

        jButton1.setBackground(new java.awt.Color(97, 212, 195));
        jButton1.setText("Carregar Arquivo de coleta ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        salvarBanco.setBackground(new java.awt.Color(97, 212, 195));
        salvarBanco.setText("Salvar no banco");
        salvarBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarBancoActionPerformed(evt);
            }
        });

        consulta.setText("Consulta");
        consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addComponent(salvarBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(consulta, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jButton1)
                .addGap(32, 32, 32)
                .addComponent(salvarBanco)
                .addGap(48, 48, 48)
                .addComponent(consulta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/alteredata/image/icons8-search-140(1).png"))); // NOI18N

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nosso produto, seu reultado");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(35, 35, 35)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel4)
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String line = null;

        boolean valida = false;
        JFileChooser arqPDF = new JFileChooser();// criaS janela de busca
        arqPDF.setDialogTitle("Selecionar arquivo txt"); // Titulo da janela de busca

        arqPDF.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("document", "txt");

        arqPDF.setFileFilter(filter);
        int retorno = arqPDF.showOpenDialog(this);

        if (retorno == JFileChooser.APPROVE_OPTION) {

            File arquivo = arqPDF.getSelectedFile();

            String caminho = String.valueOf(arquivo);

            try {
                FileReader fileReader = new FileReader(caminho);
                BufferedReader bufferedReader = new BufferedReader(fileReader);

                while ((line = bufferedReader.readLine()) != null) {

                    if (line.contains("Versao de firmare IHM:")) {

                        String ihm = line.replaceAll("[\\sA-Za-z:]", "");
                        System.out.println(ihm);

                        try {
                            listafwIhm.add(ihm);
                        } catch (Exception e) {
                            listafwIhm.add("Null");
                        }

                    }

                    if (line.contains("Versao de firmare UPS:")) {

                        String ups = line.replaceAll("[\\sA-Za-z:]", "");
                        System.out.println(ups);

                        try {
                            listafwUps.add(ups);
                        } catch (Exception e) {
                            listafwUps.add("Null");
                        }

                    }

                    if (line.contains("Endereco MAC:")) {

                        String mac = line.replaceAll("Endereco MAC: ", "");
                        System.out.println(mac);

                        try {
                            listaMAC.add(mac);
                        } catch (Exception e) {
                            listaMAC.add("Null");
                        }

                    }

                    if (line.contains("Firmware CPU:")) {

                        String ucp = line.replaceAll("[\\sA-Za-z:]", "");
                        System.out.println(ucp);

                        try {
                            listafwUcp.add(ucp);
                        } catch (Exception e) {
                            listafwUcp.add("Null");
                        }

                    }

                    if (line.contains("Numero do ponto:")) {

                        String serial = line.replaceAll("[\\sA-Za-z:]", "");
                        System.out.println(serial);

                        try {
                            listaSerial.add(serial);
                        } catch (Exception e) {
                            listaSerial.add("Null");
                        }

                    }

                    if (line.contains("ID:")) {

                        String setup = line.replaceAll("[\\sA-Za-z:]", "").replaceAll("[']", "").replace("000", "");

                        setup = setup.replaceAll(",", ".");
                        System.out.println(setup);

                        try {
                            listaSetup.add(setup);
                        } catch (Exception e) {
                            listaSetup.add("Null");
                        }
                    }

                    if (line.contains("Serial:")) {

                        String religador = line.replaceAll("[\\nA-Za-z: ]", "");
                        System.out.println(religador);

                        try {
                            listaSerialRel.add(religador);
                        } catch (Exception e) {
                            listaSerialRel.add("Null");
                        }

                    }

                    if (line.contains("CIX1 :")) {

                        String cix1 = line.replaceAll("V \\/ 1.000000 kA ", "").replaceAll("CIX1 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "");

                        try {
                            float flou = Float.parseFloat(cix1);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCIX1.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCIX1.add("Null");
                        }
                    }

                    if (line.contains("CIX2 :")) {

                        try {
                            String cix2 = line.replaceAll("V \\/ 1.000000 kA ", "").replaceAll("CIX2 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "");
                            float flou = Float.parseFloat(cix2);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCIX2.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCIX2.add("Null");
                        }
                    }

                    if (line.contains("CIX3 :")) {

                        try {
                            String cix3 = line.replaceAll("V \\/ 1.000000 kA ", "").replaceAll("CIX3 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "");
                            float flou = Float.parseFloat(cix3);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCIX3.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCIX3.add("Null");
                        }

                    }

                    if (line.contains("CIXN :")) {
                        try {
                            String cixn = line.replaceAll("V \\/ 1.000000 kA ", "").replaceAll("CIXN : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "");
                            float flou = Float.parseFloat(cixn);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCIXN.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCIXN.add("Null");
                        }

                    } else if (line.contains("CIX4 :")) {
                        try {
                            String cixn = line.replaceAll("V \\/ 1.000000 kA ", "").replaceAll("CIX4 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "");
                            float flou = Float.parseFloat(cixn);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCIXN.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCIXN.add("Null");
                        }
                    }

                    if (line.contains("CUX1 :")) {

                        try {
                            String cux1 = line.replaceAll("V \\/ 1.000000 kV ", "").replaceAll("CUX1 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "").replaceAll("[0-9][0-9].[0-9][0-9][0-9]%", "");
                            float flou = Float.parseFloat(cux1);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCUX1.add(valorFormatado);
                        } catch (NumberFormatException e) {

                            listaCUX1.add("Null");
                        }

                    }

                    if (line.contains("CUX2 :")) {
                        try {
                            String cux2 = line.replaceAll("V \\/ 1.000000 kV ", "").replaceAll("CUX2 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "").replaceAll("[0-9][0-9].[0-9][0-9][0-9]%", "");
                            float flou = Float.parseFloat(cux2);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCUX2.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCUX2.add("Null");
                        }

                    }

                    if (line.contains("CUX3 :")) {
                        try {
                            String cux3 = line.replaceAll("V \\/ 1.000000 kV ", "").replaceAll("CUX3 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "").replaceAll("[0-9][0-9].[0-9][0-9][0-9]%", "");
                            float flou = Float.parseFloat(cux3);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCUX3.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCUX3.add("Null");
                        }

                    }

                    if (line.contains("CUX4 :")) {
                        try {
                            String cux4 = line.replaceAll("V \\/ 1.000000 kV ", "").replaceAll("CUX4 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "").replaceAll("[0-9][0-9].[0-9][0-9][0-9]%", "");
                            float flou = Float.parseFloat(cux4);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCUX4.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCUX4.add("Null");
                        }

                    }

                    if (line.contains("CUX5 :")) {
                        try {
                            String cux5 = line.replaceAll("V \\/ 1.000000 kV ", "").replaceAll("CUX5 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "").replaceAll("[0-9][0-9].[0-9][0-9][0-9]%", "");
                            float flou = Float.parseFloat(cux5);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCUX5.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCUX5.add("Null");
                        }

                    }

                    if (line.contains("CUX6 :")) {
                        try {
                            String cux6 = line.replaceAll("V \\/ 1.000000 kV ", "").replaceAll("CUX6 : ", "").replaceAll("[0-9][0-9][0-9].[0-9][0-9][0-9]%", "").replaceAll("[()]", "").replaceAll("[0-9][0-9].[0-9][0-9][0-9]%", "");
                            float flou = Float.parseFloat(cux6);
                            String valorFormatado = new DecimalFormat("0.0000").format(flou);
                            System.out.println(valorFormatado);
                            listaCUX6.add(valorFormatado);
                        } catch (NumberFormatException e) {
                            listaCUX6.add("Null");
                        }

                    }

                    if (line.contains("root:/ # lport")) {

                        String velocidade = line.replaceAll("[\\nA-Za-z:# -\\/]", "");
                        System.out.println(velocidade);

                        try {
                            listaVelocidade.add(velocidade);
                        } catch (Exception e) {
                            listaVelocidade.add("Null");
                        }

                    }

                }

                JOptionPane.showMessageDialog(null, "Leitura realizada com sucesso!");
            } catch (FileNotFoundException ex) {

            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            
             for (int i = 0; i < listaMAC.size(); i++) {
                    Altere altere = new Altere();
                    
                    try {
                        altere.setFwIhm(listafwIhm.get(i));
                    } catch (Exception e) {
                        altere.setFwIhm("Null");

                    }
                      
                    try {
                        altere.setFwUps(listafwUps.get(i));
                    } catch (Exception e) {
                        altere.setFwUps("Null");

                    }
                    
                   try {
                        altere.setMac(listaMAC.get(i));
                    } catch (Exception e) {
                        altere.setMac("Null");

                    } 
                   
                   try {
                        altere.setFwUcp(listafwUcp.get(i));
                    } catch (Exception e) {
                        altere.setFwUcp("Null");

                    } 
                   
                   
                   
                    try {
                        altere.setnSerie(listaSerial.get(i));
                    } catch (Exception e) {
                        altere.setnSerie("Null");

                    } 
                    
                    try {
                        altere.setSetup(listaSetup.get(i));
                    } catch (Exception e) {
                        altere.setSetup("Null");

                    }  
                    
                    try {
                        altere.setnReligador(listaSerialRel.get(i));
                    } catch (Exception e) {
                        altere.setnReligador("Null");

                    }  
                    
                   try {
                        altere.setCix1(listaCIX1.get(i));
                    } catch (Exception e) {
                        altere.setCix1("Null");

                    }  
                     
                   try {
                        altere.setCix2(listaCIX2.get(i));
                    } catch (Exception e) {
                        altere.setCix2("Null");

                    }   
                   
                  try {
                        altere.setCix3(listaCIX3.get(i));
                    } catch (Exception e) {
                        altere.setCix3("Null");

                    }    
                 try {
                        altere.setCixn(listaCIXN.get(i));
                    } catch (Exception e) {
                        altere.setCixn("Null");

                    }     
                  
                  try {
                        altere.setCux1(listaCUX1.get(i));
                    } catch (Exception e) {
                        altere.setCux1("Null");

                    }
                  
                 try {
                        altere.setCux2(listaCUX2.get(i));
                    } catch (Exception e) {
                        altere.setCux2("Null");

                    } 
                 
                try {
                        altere.setCux3(listaCUX3.get(i));
                    } catch (Exception e) {
                        altere.setCux3("Null");

                    }   
                
                try {
                        altere.setCux4(listaCUX4.get(i));
                    } catch (Exception e) {
                        altere.setCux4("Null");

                    } 
                
                try {
                        altere.setCux5(listaCUX5.get(i));
                    } catch (Exception e) {
                        altere.setCux5("Null");

                    } 
                
                try {
                        altere.setCux6(listaCUX6.get(i));
                    } catch (Exception e) {
                        altere.setCux6("Null");

                    } 
                
                
                try {
                        altere.setVelociade(listaVelocidade.get(i));
                    } catch (Exception e) {
                        altere.setVelociade("Null");

                    } 
              
                
                listaAltere.add(i, altere);
                
             }            
            
             
             for (int i = 0; i < listaAltere.size(); i++) {
                Altere get = listaAltere.get(i);
                 System.out.println(get);
            }
             
             
             
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void salvarBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarBancoActionPerformed
     
        
          AltereDAO dao = new AltereDAO();
          
          
             for (int i = 0; i < listaAltere.size(); i++) {
                Altere altere = listaAltere.get(i);
                dao.save(altere);
        }
        
        
        
        
        
        
    }//GEN-LAST:event_salvarBancoActionPerformed

    private void consultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaActionPerformed
       
         AltereDAO dao = new AltereDAO();
         
         
        Altere altere =  dao.findByMac("00:50:C2:CE:F0:1D");
         
          System.out.println("Numero de serie: " + altere.getnSerie());
           System.out.println("Firmware IHM: " + altere.getFwIhm());
            System.out.println("Firmware UCP: " + altere.getFwUcp());
            System.out.println("Firmware UPS: " + altere.getFwUps());
            System.out.println("Firmware SETUP: " + altere.getSetup());
            System.out.println("Firmware RELIGADOR: " + altere.getnReligador());
           
         
          
            for(Altere a: dao.findAll()){
                
            System.out.println("Numero de serie: " + a.getnSerie());
           System.out.println("Firmware IHM: " + a.getFwIhm());
            System.out.println("Firmware UCP: " + a.getFwUcp());
            System.out.println("Firmware UPS: " + a.getFwUps());
            System.out.println("Firmware SETUP: " + a.getSetup());
            System.out.println("Firmware RELIGADOR: " + a.getnReligador());
            }
             
         
        

        
    }//GEN-LAST:event_consultaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton consulta;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton salvarBanco;
    // End of variables declaration//GEN-END:variables
}
